{"version":3,"sources":["sound/wan.mp3","components/Home.js","components/Header.js","components/About.js","components/Members.js","components/Schedule.js","components/Contact.js","components/Parallax.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","wan","UIfx","wanSound","Home","src","alt","onClick","play","Component","Header","props","state","isOpen","Navbar","color","light","expand","className","Container","NavbarBrand","href","NavbarToggler","setState","Collapse","this","navbar","Nav","NavItem","NavLink","About","Members","owners","admin","mods","members","membersJSON","forEach","e","rank","push","map","index","key","image","username","width","height","main","secondary","other","bio","url","Schedule","componentDidMount","getEvents","calendarEvents","request","get","end","err","resp","events","JSON","parse","text","items","event","start","date","dateTime","title","summary","console","log","defaultView","plugins","dayGridPlugin","googleCalendarPlugin","Contact","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","ParallaxBG","useSpring","xy","config","mass","tension","friction","set","div","onMouseMove","clientX","clientY","style","transform","interpolate","App","Parallax","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.45a3e682.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wan.138cb2e5.mp3\";","import React, { Component } from 'react';\n\nimport wanSound from '../sound/wan.mp3';\nimport UIfx from 'uifx'; \n\nconst wan = new UIfx(wanSound)\n\nclass Home extends Component {\n    render() {\n          \n        return (\n            <div>\n                Dogs on the daily\n                <img src=\"./images/bella.png\" alt=\"Bella drunk on donut\" onClick={() => wan.play()} />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nimport { Nav, Navbar, NavbarBrand, NavItem, NavLink, Container, NavbarToggler, Collapse } from \"reactstrap\"\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    render() {\n        const toggle = () => this.setState({isOpen: !this.state.isOpen});\n\n        return (\n            <Navbar color=\"light\" light expand=\"md\" className=\"navigation\">\n                <Container>\n                    <NavbarBrand href=\"#/\">Bella Bella Bella</NavbarBrand>\n                    <NavbarToggler onClick={() => toggle()} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"mr-auto\" navbar>\n                                <NavItem>\n                                    <NavLink href=\"#/\">Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"#/about\">About</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"#/members\">Members</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"#/schedule\">Schedule</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"#/contact\">Contact</NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                About\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport membersJSON from '../json/members';\n\n\n\nclass Members extends Component {\n    render() {\n        let owners = [];\n        let admin = [];\n        let mods = [];\n        let members = [];\n\n        membersJSON.forEach(e => {\n            if (e.rank === \"Owner\") {\n                owners.push(e);\n            }\n            else if (e.rank === \"Admin\") {\n                admin.push(e);\n            }\n            else if (e.rank === \"Mods\") {\n                mods.push(e);\n            }\n            else {\n                members.push(e);\n            }\n        });\n\n        return (\n            <div>\n                Members\n                <h1>Owners</h1>\n                {owners.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n                <h1>Admin</h1>\n                {admin.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n                <h1>Mods</h1>\n                {mods.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n                <h1>Members</h1>\n                {members.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Members;","import React, { Component } from 'react';\nimport request from 'superagent'\n\nimport FullCalendar from '@fullcalendar/react'\nimport googleCalendarPlugin from '@fullcalendar/google-calendar';\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\nimport './main.scss'\n\nconst CALENDAR_ID = 'gb70im82hum1hnb7jkoc2u9oos@group.calendar.google.com'\nconst API_KEY = 'AIzaSyAbsu0VJ3yJnUZp6yoJSsjGYcOK6vozRs4'\nlet url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}`\n\nclass Schedule extends Component {\n    componentDidMount = () => {\n        this.getEvents();\n    }\n\n    getEvents(){\n        request\n        .get(url)\n        .end((err, resp) => {\n          if (!err) {\n            const events = []\n            JSON.parse(resp.text).items.map((event) => {\n              events.push({\n                start: event.start.date || event.start.dateTime,\n                end: event.end.date || event.end.dateTime,\n                title: event.summary,\n              })\n            })\n            this.setState({calendarEvents: events})\n          }\n        })\n    }\n\n    state = {\n        calendarEvents: {\n        }\n      }\n    render() {\n        console.log(this.state.calendarEvents)\n        return (\n            <div>\n                <FullCalendar \n                    defaultView=\"dayGridMonth\"\n                    events={this.state.calendarEvents}\n                    plugins={[ dayGridPlugin, googleCalendarPlugin ]}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default Schedule;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div>\n                  Contact  \n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 20}px,${y / 20}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 15}px,${y / 20}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 8}px,${y / 20}px,0)`\n\n\nfunction ParallaxBG() {\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n\n    return (\n        <animated.div className=\"bgcontainer\"\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n            <animated.div alt=\"Background\" className=\"bg\" />\n            <animated.div alt=\"Background\" className=\"farbg\" \n            style={{ transform: props.xy.interpolate(trans1) }}/>\n            <animated.div alt=\"Background\" className=\"midbg\" \n            style={{ transform: props.xy.interpolate(trans2) }}/>\n            <animated.div alt=\"Background\" className=\"closebg\" \n            style={{ transform: props.xy.interpolate(trans3) }}/>\n        </animated.div>\n    );\n    \n}\n\nexport default ParallaxBG;","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route} from 'react-router-dom'\nimport { Container } from 'reactstrap';\n\nimport Home from './components/Home'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Members from './components/Members'\nimport Schedule from './components/Schedule'\nimport Contact from './components/Contact'\nimport Parallax from './components/Parallax'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// Hashrouter hashes url\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n          <Parallax />\n          <Header />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/members\" component={Members}/>\n              <Route path=\"/schedule\" component={Schedule}/>\n              <Route path=\"/contact\" component={Contact}/>\n            </Switch>\n          </Container>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}