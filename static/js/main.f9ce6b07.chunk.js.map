{"version":3,"sources":["sound/wan.mp3","components/Home.js","components/Header.js","components/About.js","components/Members.js","components/Schedule.js","components/Contact.js","components/Parallax.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","src","alt","className","class","width","height","Component","Header","props","state","isOpen","Navbar","dark","color","light","expand","Container","NavbarToggler","onClick","setState","Collapse","this","navbar","Nav","NavItem","NavLink","href","About","Members","owners","admin","mods","membersJSON","forEach","e","rank","push","map","index","key","image","username","main","secondary","other","bio","url","Schedule","componentDidMount","getEvents","calendarEvents","request","get","end","err","resp","events","JSON","parse","text","items","event","start","date","dateTime","title","summary","defaultView","plugins","dayGridPlugin","eventLimit","Contact","calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","wan","UIfx","wanSound","ParallaxBG","useState","toggle","useSpring","from","config","duration","xy","mass","tension","friction","set","div","onMouseMove","clientX","clientY","style","transform","interpolate","play","range","output","App","Parallax","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9ce6b07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wan.138cb2e5.mp3\";","import React, { Component } from 'react';\n\nclass Home extends Component {\n    render() {\n          \n        return (\n            <div>\n                <img src=\"./images/test.jpg\" alt=\"Heading\" className=\"headingImg\"/>\n                <h2>Heading</h2>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    Lobortis feugiat vivamus at augue eget arcu dictum varius. \n                    Maecenas ultricies mi eget mauris pharetra et ultrices neque. \n                    Vitae purus faucibus ornare suspendisse sed. \n                    Commodo ullamcorper a lacus vestibulum sed arcu non odio euismod. Velit egestas dui id ornare. \n                    Tortor posuere ac ut consequat semper viverra nam. \n                </p>\n\n                <div class=\"articles\">\n                    <img src=\"./images/dog.png\" alt=\"Dog\" width=\"500\" height=\"300\" />\n                    <div className=\"articlesContent\">\n                        <h2>Header</h2>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                            Lobortis feugiat vivamus at augue eget arcu dictum varius. \n                        </p>\n                    </div>\n                </div>\n                <div class=\"articles\">\n                    <div className=\"articlesContent\">\n                        <h2>Header</h2>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                            Lobortis feugiat vivamus at augue eget arcu dictum varius. \n                        </p>\n                    </div>\n                    <img src=\"./images/dog.png\" alt=\"Dog\" width=\"500\" height=\"300\" />\n                </div>\n            </div>            \n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nimport { Nav, Navbar, NavItem, NavLink, Container, NavbarToggler, Collapse } from \"reactstrap\"\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    render() {\n        const toggle = () => this.setState({isOpen: !this.state.isOpen});\n\n        return (\n            <Navbar dark=\"true\" color=\"dark\" light expand=\"md\" className=\"navigation\">\n                <Container>\n                    <NavbarToggler onClick={() => toggle()} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"navh\" navbar >\n                                <NavItem className=\"navhitem\">\n                                    <NavLink href=\"#/\">Home</NavLink>\n                                </NavItem>\n                                <NavItem className=\"navhitem\">\n                                    <NavLink href=\"#/about\">About</NavLink>\n                                </NavItem>\n                                <NavItem className=\"navhitem\">\n                                    <NavLink href=\"#/members\">Members</NavLink>\n                                </NavItem>\n                                <NavItem className=\"navhitem\">\n                                    <NavLink href=\"#/schedule\">Schedule</NavLink>\n                                </NavItem>\n                                <NavItem className=\"navhitem\">\n                                    <NavLink href=\"#/contact\">Contact</NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <div>\n                <img src=\"./images/test.jpg\" alt=\"Heading\" className=\"headingImg\"/>\n                <h2>Heading</h2>\n                <p>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                    Lobortis feugiat vivamus at augue eget arcu dictum varius. \n                    Maecenas ultricies mi eget mauris pharetra et ultrices neque. \n                    Vitae purus faucibus ornare suspendisse sed. \n                    Commodo ullamcorper a lacus vestibulum sed arcu non odio euismod. Velit egestas dui id ornare. \n                    Tortor posuere ac ut consequat semper viverra nam. \n                </p>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport membersJSON from '../json/members';\n\n\n\nclass Members extends Component {\n    render() {\n        let owners = [];\n        let admin = [];\n        let mods = [];\n\n        // Checks each rank in JSON and stores it in simple array\n        membersJSON.forEach(e => {\n            if (e.rank === \"Owner\") {\n                owners.push(e);\n            }\n            else if (e.rank === \"Admin\") {\n                admin.push(e);\n            }\n            else {\n                mods.push(e);\n            }\n        });\n\n        // Shoots out data based on arrays\n        return (\n            <div>\n                Members\n                <h1>Owners</h1>\n                {owners.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n                <h1>Admin</h1>\n                {admin.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n                <h1>Mods</h1>\n                {mods.map((e, index) => (\n                    <div key={index}>\n                        <img src={`./images/${e.image}`} alt={`${e.username}`} width=\"100\" height=\"100\"/>\n                        <h2>{e.username}</h2>\n                        <h3>{e.main}</h3>\n                        <h4>{e.secondary}</h4>\n                        <p>Games playing: {e.other}</p>\n                        <p>{e.bio}</p>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Members;","import React, { Component } from 'react';\nimport request from 'superagent'\n\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\n\nimport './main.scss'\n\n// Calendar ID used to connect to calendar\n// API Used to connect to google servers\n// Url returns individual events (Single Events turns recurring into their own object)\nconst CALENDAR_ID = 'umn.edu_6gok0mfp3fdc2g6kb8qesmjfro@group.calendar.google.com'\nconst API_KEY = 'AIzaSyAbsu0VJ3yJnUZp6yoJSsjGYcOK6vozRs4'\nlet url = `https://www.googleapis.com/calendar/v3/calendars/${CALENDAR_ID}/events?key=${API_KEY}&singleEvents=true`\n\nclass Schedule extends Component {\n    componentDidMount = () => {\n        this.getEvents();\n    }\n\n    getEvents(){\n        // xhr call, using library to make simpler\n        request\n        .get(url)\n        .end((err, resp) => {\n            // Error check\n            if (!err) {\n                const events = []\n                // eslint-disable-next-line\n                JSON.parse(resp.text).items.map((event) => {\n                    //Pushes events into events array, stores into state\n                    events.push({\n                        start: event.start.date || event.start.dateTime,\n                        end: event.end.date || event.end.dateTime,\n                        title: event.summary\n                    })\n                })\n                this.setState({calendarEvents: events})\n          }\n        })\n    }\n\n    state = {\n        calendarEvents: {}\n    }\n    // Uses Fullcalendar library to visualy show data with ease of access\n    render() {\n        return (\n            <div>\n                <FullCalendar \n                    defaultView=\"dayGridMonth\"\n                    events={this.state.calendarEvents}\n                    plugins={[ dayGridPlugin ]}\n                    eventLimit={true}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default Schedule;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div>\n                <h2>How To Contact Us</h2>  \n                <p>If you have any questions messages the owners in game with the contact information below. \n                    Feel free to visit our FC home at any time, we are awake by [Time] and usually get on at [Time].\n                </p>\n                <h3>FC Location</h3>\n                <p>Plot Location</p>\n                <p>Plot Area</p>\n                <p>Plot Number</p>\n\n                <h3>Contact Information</h3>\n                <p>Owner 1 name</p>\n                <p>Owner 1 server</p>\n\n                <p>Owner 2 name</p>\n                <p>Owner 2 server</p>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React, { useState } from 'react';\nimport { useSpring, animated } from 'react-spring'\n\nimport wanSound from '../sound/wan.mp3';\nimport UIfx from 'uifx'; \n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 50}px,${y / 70}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 25}px,${y / 70}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 15}px,${y / 50}px,0)`\n\nconst wan = new UIfx(wanSound)\n\n\nfunction ParallaxBG() {\n    const [state, toggle] = useState(true);\n    const { x } = useSpring({ from: { x: 0 }, x: state ? 1 : 0, config: { duration: 700 } });\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 600, friction: 140 } }));\n\n    return (\n        <animated.div className=\"bgcontainer\"\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n            <animated.div alt=\"Background\" className=\"bg\" />\n            <animated.div alt=\"Background\" className=\"farbg\" \n            style={{ transform: props.xy.interpolate(trans1) }}/>\n            <animated.div alt=\"Background\" className=\"midbg\" \n            style={{ transform: props.xy.interpolate(trans2) }}/>\n            <animated.div alt=\"Background\" className=\"closebg\" \n            style={{ transform: props.xy.interpolate(trans3) }}/>\n            <animated.div alt=\"Logo\" className=\"bglogo\" \n            onClick={() => { wan.play(); toggle(!state);} }\n            style={{\n                transform: x.interpolate({\n                    range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n                    output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n                  })\n                  .interpolate(x => `scale(${x})`)\n              }} \n            />\n        </animated.div>\n    );\n    \n}\n\nexport default ParallaxBG;","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route} from 'react-router-dom'\nimport { Container } from 'reactstrap';\n\nimport Home from './components/Home'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Members from './components/Members'\nimport Schedule from './components/Schedule'\nimport Contact from './components/Contact'\nimport Parallax from './components/Parallax'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n// Hashrouter hashes url\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n          <Parallax />\n          <Header />\n          <Container className=\"bodywrapper\">\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route path=\"/about\" component={About}/>\n              <Route path=\"/members\" component={Members}/>\n              <Route path=\"/schedule\" component={Schedule}/>\n              <Route path=\"/contact\" component={Contact}/>\n            </Switch>\n          </Container>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}